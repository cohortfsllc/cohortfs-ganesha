#
# Fichier de configuration de test 
#
# $Header: /cea/home/cvs/cvs/SHERPA/BaseCvs/GANESHA/src/LRU/maketest.conf,v 1.5 2004/10/22 09:24:29 deniel Exp $
# 
# $Log: maketest.conf,v $
# Revision 1.5  2004/10/22 09:24:29  deniel
# No more dynamic libraries compiled
#
# Revision 1.4  2004/09/23 14:34:48  deniel
# Mise en place du test configurable
#
# Revision 1.3  2004/09/21 12:21:04  deniel
# Differentiation des differents tests configurables
# Premiere version clean
#
# Revision 1.2  2004/09/20 15:36:18  deniel
# Premiere implementation, sans prealloc
#
# Revision 1.1  2004/09/01 14:52:24  deniel
# Population de la branche LRU
#
# Revision 1.9  2004/08/25 06:21:24  deniel
# Mise en place du test configurable ok
#
# Revision 1.8  2004/08/24 12:03:08  deniel
# Ajout de test-configurable.c
#
# Revision 1.7  2004/08/24 10:41:14  deniel
# Avant re-ecriture d'un autre test.
#
# Revision 1.6  2004/08/23 08:20:56  deniel
# Mise en place de RBT_FIND_LEFT
#
# Revision 1.5  2004/08/20 08:55:13  deniel
# Rajout du support des statistique
# Doxygenisation des sources
#
# Revision 1.4  2004/08/19 09:44:07  deniel
# Ajout d'autres tests dans test_cmchash et maketest.conf
#
# Revision 1.3  2004/08/19 09:19:12  deniel
# des allocations groupees par chunk
#
# Revision 1.2  2004/08/18 09:14:26  deniel
# Ok pour les nouvelles tables de hash plus generiques avec des listes chaines
#
# Revision 1.1  2004/08/16 14:48:36  deniel
# Distrib de RW_Lock et HashTable avec les tests de non regression
#
#


Test Test_liblru_Static
{
   Product = Librairie cmchash en statique
   Command = ./test_lru
   Comment = Positionne des valeurs et en verifie quelques une 

        Success TestOk
        {
          STDOUT =~ /Test succeeded: all tests pass successfully/m
            AND
          STATUS == 0 
        }

	Failure BadInit
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /Test FAILED : Bad Init/m ;
	}

	Failure BadNewEntry
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /Test FAILED : bad entry add/m
	}

	Failure BadGc
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /Test FAILED : bad gc/m

}



Test Test_configurable_1
{
   Product = Librairie lru en statique
   Command =  ./test_configurable_lru < ../scripts/test_lru1.tst
   Comment = Positionne des valeurs et en verifie quelques une, selon un fichier de conf

        Success TestOk
        {
          STDOUT =~ /Test reussi : tous les tests sont passes avec succes/m
            AND
          STATUS == 0
         }

        Failure BadInit
        {
           STATUS != 0
             AND
           STDOUT =~ /Test ECHOUE : Mauvaise init/m
        }

	Failure BadInvalidate
	{
           STATUS != 0
             AND
	   STDOUT =~ /ERREUR: invalidate/m 
	}

	Failure BadNewEntry
	{
           STATUS != 0
             AND
	   STDOUT =~ /ERREUR: new/m 
	}

	Failure BadGcInvalid
	{
           STATUS != 0
             AND
	   STDOUT =~ /ERREUR: gc/m 
	}
}
