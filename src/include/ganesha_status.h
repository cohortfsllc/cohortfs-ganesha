/*
 * Copyright Â© CohortFS, LLC.
 * Author: William Allen Simpson <bill@CohortFS.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Lesser General Public License
 * as published by the Free Software Foundation; either version 3 of
 * the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this library; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301 USA
 */

/**
 * @file   ganesha_status.h
 * @author William Allen Simpson <bill@CohortFS.com>
 * @author Daniel Gryniewicz <dang@CohortFS.com>
 * @date   Mon Nov 17 14:11:17 2014
 *
 * @brief Ganesha Unified Status
 */

#ifndef GANESHA_STATUS_H
#define GANESHA_STATUS_H

/**
 * @brief Ganesha Unified Status
 */
typedef enum g_u_s__ {
	GNSH_U_S_SUCCESS = 0,
	GNSH_U_S_MALLOC_ERROR = 1,
	GNSH_U_S_POOL_MUTEX_INIT_ERROR = 2,
	GNSH_U_S_GET_NEW_LRU_ENTRY = 3,
	GNSH_U_S_INIT_ENTRY_FAILED = 4,
	GNSH_U_S_FSAL_ERROR = 5,
	GNSH_U_S_LRU_ERROR = 6,
	GNSH_U_S_HASH_SET_ERROR = 7,
	GNSH_U_S_NOT_A_DIRECTORY = 8,
	GNSH_U_S_INCONSISTENT_ENTRY = 9,
	GNSH_U_S_BAD_TYPE = 10,
	GNSH_U_S_ENTRY_EXISTS = 11,
	GNSH_U_S_DIR_NOT_EMPTY = 12,
	GNSH_U_S_NOT_FOUND = 13,
	GNSH_U_S_INVALID_ARGUMENT = 14,
	GNSH_U_S_INSERT_ERROR = 15,
	GNSH_U_S_HASH_TABLE_ERROR = 16,
	GNSH_U_S_FSAL_EACCESS = 17,
	GNSH_U_S_IS_A_DIRECTORY = 18,
	GNSH_U_S_FSAL_EPERM = 19,
	GNSH_U_S_NO_SPACE_LEFT = 20,
	GNSH_U_S_READ_ONLY_FS = 21,
	GNSH_U_S_IO_ERROR = 22,
	GNSH_U_S_FSAL_ESTALE = 23,
	GNSH_U_S_FSAL_ERR_SEC = 24,
	GNSH_U_S_STATE_CONFLICT = 25,
	GNSH_U_S_QUOTA_EXCEEDED = 26,
	GNSH_U_S_DEAD_ENTRY = 27,
	GNSH_U_S_ASYNC_POST_ERROR = 28,
	GNSH_U_S_NOT_SUPPORTED = 29,
	GNSH_U_S_STATE_ERROR = 30,
	GNSH_U_S_FSAL_DELAY = 31,
	GNSH_U_S_NAME_TOO_LONG = 32,
	GNSH_U_S_BAD_COOKIE = 33,
	GNSH_U_S_FILE_BIG = 34,
	GNSH_U_S_KILLED = 35,
	GNSH_U_S_FILE_OPEN = 36,
	GNSH_U_S_FSAL_XDEV = 37,
	GNSH_U_S_FSAL_MLINK = 38,
	GNSH_U_S_SERVERFAULT = 39,
	GNSH_U_S_TOOSMALL = 40,
	GNSH_U_S_FSAL_SHARE_DENIED = 41,
	GNSH_U_S_BADNAME = 42,
	GNSH_U_S_UNION_NOTSUPP = 43,
	GNSH_U_S_CROSS_JUNCTION = 44,
	GNSH_U_S_IN_GRACE = 45,
	GNSH_U_S_BADHANDLE = 46,
/* 500 */
	GNSH_U_S_LOCKED = 527,
	GNSH_U_S_LOCK_BLOCKED = 536,
	GNSH_U_S_LOCK_CONFLICT = 535,
	GNSH_U_S_LOCK_DEADLOCK = 537,
	GNSH_U_S_GRACE_PERIOD = 539,
	GNSH_U_S_CACHE_INODE_ERR = 541,
	GNSH_U_S_SIGNAL_ERROR = 542,
} g_u_s_t;

/**
 * @brief Possible Errors from SAL Code
 *
 * @note A lot of these errors don't make sense in the context of the
 *       SAL and ought to be pruned.
 */
typedef enum {
	STATE_SUCCESS =				GNSH_U_S_SUCCESS,
	STATE_MALLOC_ERROR =			GNSH_U_S_MALLOC_ERROR,
	STATE_POOL_MUTEX_INIT_ERROR =		GNSH_U_S_POOL_MUTEX_INIT_ERROR,
	STATE_GET_NEW_LRU_ENTRY =		GNSH_U_S_GET_NEW_LRU_ENTRY,
	STATE_INIT_ENTRY_FAILED =		GNSH_U_S_INIT_ENTRY_FAILED,
	STATE_FSAL_ERROR =			GNSH_U_S_FSAL_ERROR,
	STATE_LRU_ERROR =			GNSH_U_S_LRU_ERROR,
	STATE_HASH_SET_ERROR =			GNSH_U_S_HASH_SET_ERROR,
	STATE_NOT_A_DIRECTORY =			GNSH_U_S_NOT_A_DIRECTORY,
	STATE_INCONSISTENT_ENTRY =		GNSH_U_S_INCONSISTENT_ENTRY,
	STATE_BAD_TYPE =			GNSH_U_S_BAD_TYPE,
	STATE_ENTRY_EXISTS =			GNSH_U_S_ENTRY_EXISTS,
	STATE_DIR_NOT_EMPTY =			GNSH_U_S_DIR_NOT_EMPTY,
	STATE_NOT_FOUND =			GNSH_U_S_NOT_FOUND,
	STATE_INVALID_ARGUMENT =		GNSH_U_S_INVALID_ARGUMENT,
	STATE_INSERT_ERROR =			GNSH_U_S_INSERT_ERROR,
	STATE_HASH_TABLE_ERROR =		GNSH_U_S_HASH_TABLE_ERROR,
	STATE_FSAL_EACCESS =			GNSH_U_S_FSAL_EACCESS,
	STATE_IS_A_DIRECTORY =			GNSH_U_S_IS_A_DIRECTORY,
	STATE_FSAL_EPERM =			GNSH_U_S_FSAL_EPERM,
	STATE_NO_SPACE_LEFT =			GNSH_U_S_NO_SPACE_LEFT,
	STATE_READ_ONLY_FS =			GNSH_U_S_READ_ONLY_FS,
	STATE_IO_ERROR =			GNSH_U_S_IO_ERROR,
	STATE_FSAL_ESTALE =			GNSH_U_S_FSAL_ESTALE,
	STATE_FSAL_ERR_SEC =			GNSH_U_S_FSAL_ERR_SEC,
	STATE_STATE_CONFLICT =			GNSH_U_S_STATE_CONFLICT,
	STATE_QUOTA_EXCEEDED =			GNSH_U_S_QUOTA_EXCEEDED,
	STATE_DEAD_ENTRY =			GNSH_U_S_DEAD_ENTRY,
	STATE_ASYNC_POST_ERROR =		GNSH_U_S_ASYNC_POST_ERROR,
	STATE_NOT_SUPPORTED =			GNSH_U_S_NOT_SUPPORTED,
	STATE_STATE_ERROR =			GNSH_U_S_STATE_ERROR,
	STATE_FSAL_DELAY =			GNSH_U_S_FSAL_DELAY,
	STATE_NAME_TOO_LONG =			GNSH_U_S_NAME_TOO_LONG,
	STATE_BAD_COOKIE =			GNSH_U_S_BAD_COOKIE,
	STATE_FILE_BIG =			GNSH_U_S_FILE_BIG,
	STATE_KILLED =				GNSH_U_S_KILLED,
	STATE_FILE_OPEN =			GNSH_U_S_FILE_OPEN,
	STATE_XDEV =				GNSH_U_S_FSAL_XDEV,
	STATE_MLINK =				GNSH_U_S_FSAL_MLINK,
	STATE_SERVERFAULT =			GNSH_U_S_SERVERFAULT,
	STATE_TOOSMALL =			GNSH_U_S_TOOSMALL,
	STATE_FSAL_SHARE_DENIED =		GNSH_U_S_FSAL_SHARE_DENIED,
/*	STATE_BADNAME =				GNSH_U_S_BADNAME,	    */
/*	STATE_UNION_NOTSUPP =			GNSH_U_S_UNION_NOTSUPP,	    */
/*	STATE_CROSS_JUNCTION =			GNSH_U_S_CROSS_JUNCTION,    */
	STATE_IN_GRACE =			GNSH_U_S_IN_GRACE,
	STATE_BADHANDLE =			GNSH_U_S_BADHANDLE,
/* 500 + old value */
	STATE_LOCKED =				GNSH_U_S_LOCKED,
	STATE_LOCK_BLOCKED =			GNSH_U_S_LOCK_BLOCKED,
	STATE_LOCK_CONFLICT =			GNSH_U_S_LOCK_CONFLICT,
	STATE_LOCK_DEADLOCK =			GNSH_U_S_LOCK_DEADLOCK,
	STATE_GRACE_PERIOD =			GNSH_U_S_GRACE_PERIOD,
	STATE_CACHE_INODE_ERR =			GNSH_U_S_CACHE_INODE_ERR,
	STATE_SIGNAL_ERROR =			GNSH_U_S_SIGNAL_ERROR,
} state_status_t;

#endif				/* !GANESHA_STATUS_H */
