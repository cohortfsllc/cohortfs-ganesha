#
# Fichier de configuration de test 
#
# $Header: /cea/home/cvs/cvs/SHERPA/BaseCvs/GANESHA/src/HashTable/maketest.conf,v 1.10 2004/10/22 09:24:26 deniel Exp $
# 
# $Log: maketest.conf,v $
# Revision 1.10  2004/10/22 09:24:26  deniel
# No more dynamic libraries compiled
#
# Revision 1.9  2004/08/25 06:21:24  deniel
# Mise en place du test configurable ok
#
# Revision 1.8  2004/08/24 12:03:08  deniel
# Ajout de test-configurable.c
#
# Revision 1.7  2004/08/24 10:41:14  deniel
# Avant re-ecriture d'un autre test.
#
# Revision 1.6  2004/08/23 08:20:56  deniel
# Mise en place de RBT_FIND_LEFT
#
# Revision 1.5  2004/08/20 08:55:13  deniel
# Rajout du support des statistique
# Doxygenisation des sources
#
# Revision 1.4  2004/08/19 09:44:07  deniel
# Ajout d'autres tests dans test_cmchash et maketest.conf
#
# Revision 1.3  2004/08/19 09:19:12  deniel
# des allocations groupees par chunk
#
# Revision 1.2  2004/08/18 09:14:26  deniel
# Ok pour les nouvelles tables de hash plus generiques avec des listes chaines
#
# Revision 1.1  2004/08/16 14:48:36  deniel
# Distrib de RW_Lock et HashTable avec les tests de non regression
#
#

Test Test_configurable_1
{
   Product = Librairie cmchash en statique
   Command = sh ./run_test_libcmc_config.sh
   Comment = Positionne des valeurs et en verifie quelques une, selon un fichier de conf
     
        Success TestOk
        {
          STDOUT =~ /Test succeeded: all tests pass successfully/m
            AND
          STATUS == 0 
         }

	Failure BadAlloc
        {
           STATUS != 0
             AND
           STDOUT =~ /Test FAILED: problem with Mem_Alloc/m 
        }

	Failure BadInsertNew
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /Test FAILED: Inserting a new entry impossible/
	}

	Failure BadGet
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /ERROR: get/
	}

	Failure BadSet
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /ERROR: set/
	}

	Failure BadDel
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /ERROR: del/
	}

	Failure BadNew
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /ERROR: new/
	}

	Failure BadTest
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /ERROR: test/
	}
}

Test Test_libcmchash_Static
{
   Product = Librairie cmchash en statique
   Command = ./test_libcmc
   Comment = Positionne des valeurs et en verifie quelques une 

        Success TestOk
        {
          STDOUT =~ /Test succeeded: all tests pass successfully/m
            AND
          STATUS == 0 
        }

        Failure FoundBadValue
        {
           STATUS != 0
             AND
           STDOUT =~ /Test ECHOUE : la valeur lue est incorrecte/m
        }

	Failure BadHashTableInit
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /Test ECHOUE : Mauvaise init/m 
	}

	Failure BadHashDelete
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /Test ECHOUE : effacement incorrect/m
	}

	Failure BadStatistique
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /Test ECHOUE : statistiques incorrectes/m
	}

	Failure KeyIncoherence
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /Test ECHOUE : La clef n'est pas trouvee/m 
	}
	
	Failure RedondantKey
	{
	   STATUS != 0 
	     AND
           STDOUT =~ /Test ECHOUE : Clef redondante/m
	}
}




