#
# Fichier de configuration de test 
#

Test Test_malloc_write
{
   Product = Buddy library.
   Command = ./test_buddy 1
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Failure BadInit
        {
          STDOUT =~ /BuddyInit\([0-9]+\)=[^0]/
        }
        
        
        Failure OutOfMem
        {
          STDOUT =~ /NOT ENOUGH MEMORY/
        }
        
        Failure IntegrityError
        {
          STDOUT =~ /INTEGRITY ERROR/
        }

        Failure BuddyErrno_Not_Null
        {
          STDOUT =~ /BUDDY_ERRNO=[^0]/
        }
        
        # 1 big free block: If 2 => Error
        Failure FreeError
        {
         STDOUT =~ /status=FREE(.|\s)*status=FREE/
        }

        # Error : non-empty block in the pool of free blocks.
        Failure NonEmptyBlock
        {
         STDOUT =~ /status=RESERV/
        }

        
        Success TestOk
        {
          STATUS == 0
          AND
          STDOUT =~ /BuddyInit\([0-9]+\)=0/
          AND
          STDOUT =~ /BUDDY_ERRNO=0/
          AND
          STDOUT =~ /status=FREE/
        }
        
}


Test Test_perf
{
   Product = Buddy library.
   Command = ./test_buddy 2
   Comment = at least 10000 malloc/free per sec.

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Failure BadInit
        {
          STDOUT =~ /BuddyInit\([0-9]+\)=[^0]/
        }
        
        
        Failure OutOfMem
        {
          STDOUT =~ /NOT ENOUGH MEMORY/
        }
        
        Failure Very_Low_Performances
        {
          STDOUT =~ /Free in [^0]/
        }

        Failure BuddyErrno_Not_Null
        {
          STDOUT =~ /BUDDY_ERRNO=[^0]/
        }
        
        # 1 big free block: If 2 => Error
        Failure FreeError
        {
         STDOUT =~ /status=FREE(.|\s)*status=FREE/
        }
        
        # Error : non-empty block in the pool of free blocks.
        Failure NonEmptyBlock
        {
         STDOUT =~ /status=RESERV/
        }
        
        Success TestOk
        {
          STATUS == 0
          AND
          STDOUT =~ /BuddyInit\([0-9]+\)=0/
          AND
          STDOUT =~ /BUDDY_ERRNO=0/
          AND
          STDOUT =~ /status=FREE/
          AND
          STDOUT =~ /Free in 0./
        }
        
}




Test Test_Alignment
{
   Product = Buddy library.
   Command = ./test_buddy 3
   Comment = Tests memory alignment.

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Failure BadInit
        {
          STDOUT =~ /BuddyInit\([0-9]+\)=[^0]/
        }
                
        Failure Alignment32Error
        {
          STDOUT =~ /32 bits alignment ERROR/
        }

        Failure Alignment64Error
        {
          STDOUT =~ /64 bits alignment ERROR/
        }

        # Error : non-empty block in the pool of free blocks.
        Failure NonEmptyBlock
        {
         STDOUT =~ /status=RESERV/
        }

        
        Success TestOk
        {
          STATUS == 0
          AND
          STDOUT =~ /BuddyInit\([0-9]+\)=0/
          AND
          NOT
          STDOUT =~ /alignment ERROR/
        }
        
}




Test Test_Realloc
{
   Product = Buddy library.
   Command = ./test_buddy 4
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Failure BadInit
        {
          STDOUT =~ /BuddyInit\([0-9]+\)=[^0]/
        }
        
        
        Failure OutOfMem
        {
          STDOUT =~ /NOT ENOUGH MEMORY/
        }
        
        Failure IntegrityError
        {
          STDOUT =~ /INTEGRITY ERROR/
        }

        Failure BuddyErrno_Not_Null
        {
          STDOUT =~ /BUDDY_ERRNO=[^0]/
        }
        
        # Error : non-empty block in the pool of free blocks.
        Failure NonEmptyBlock
        {
         STDOUT =~ /status=RESERV/
        }

        # note. At last, at least one free block
        # (resulting from the last reallocated block )
        Success TestOk
        {
          STATUS == 0
          AND
          STDOUT =~ /BuddyInit\([0-9]+\)=0/
          AND
          STDOUT =~ /BUDDY_ERRNO=0/
          AND
          STDOUT =~ /status=FREE/          
        }
        
}



Test Test_Calloc
{
   Product = Buddy library.
   Command = ./test_buddy 5
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Failure BadInit
        {
          STDOUT =~ /BuddyInit\([0-9]+\)=[^0]/
        }
        
        
        Failure OutOfMem
        {
          STDOUT =~ /NOT ENOUGH MEMORY/
        }
        
        Failure IntegrityError
        {
          STDOUT =~ /INTEGRITY ERROR/
        }

        Failure MemsetError
        {
          STDOUT =~ /MEMSET ERROR/
        }

        Failure BuddyErrno_Not_Null
        {
          STDOUT =~ /BUDDY_ERRNO=[^0]/
        }
        
        # 1 big free block: If 2 => Error
        Failure FreeError
        {
         STDOUT =~ /status=FREE(.|\s)*status=FREE/
        }

        # Error : non-empty block in the pool of free blocks.
        Failure NonEmptyBlock
        {
         STDOUT =~ /status=RESERV/
        }

        
        Success TestOk
        {
          STATUS == 0
          AND
          STDOUT =~ /BuddyInit\([0-9]+\)=0/
          AND
          STDOUT =~ /BUDDY_ERRNO=0/
          AND
          STDOUT =~ /status=FREE/          
          AND
          NOT
          STDOUT =~ /INTEGRITY ERROR/
          AND
          NOT
          STDOUT =~ /MEMSET ERROR/
          
        }
        
}



Test Test_On_Demand_Alloc
{
   Product = Buddy library.
   Command = ./test_buddy 6
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Success TestOk
        {
          STATUS == 0
        }
        
}

Test Test_On_Demand_extra_alloc
{
   Product = Buddy library.
   Command = ./test_buddy 7
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Success TestOk
        {
          STATUS == 0
        }
}

Test Test_GC_MULTITHREAD
{
   Product = Buddy library.
   Command = ./test_buddy 8
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Success TestOk
        {
          STATUS == 0
        }
        
}


Test Test_Block_Label
{
   Product = Buddy library.
   Command = ./test_buddy 9
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Success TestOk
        {
          STATUS == 0
        }
        
}

Test Test_Shared_Segment 
{
   Product = Buddy library.
   Command = ./test_buddy A
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Success TestOk
        {
          STATUS == 0
          AND
          STDOUT =~ /All resources released successfully/
        }
        
}

Test Test_Integrity
{
   Product = Buddy library.
   Command = ./test_buddy B
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Success TestOk
        {
          STATUS == 0
        }
        
}

#
# Multithread tests
#

Test Test_malloc_write_MULTITHREAD
{
   Product = Buddy library.
   Command = ./test_buddy 1mt
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Failure BadInit
        {
          STDOUT =~ /BuddyInit\([0-9]+\)=[^0]/
        }
        
        
        Failure OutOfMem
        {
          STDOUT =~ /NOT ENOUGH MEMORY/
        }
        
        Failure IntegrityError
        {
          STDOUT =~ /INTEGRITY ERROR/
        }

        Failure BuddyErrno_Not_Null
        {
          STDOUT =~ /BUDDY_ERRNO=[^0]/
        }
        
        # Error : non-empty block in the pool of free blocks.
        Failure NonEmptyBlock
        {
         STDOUT =~ /status=RESERV/
        }

        
        Success TestOk
        {
          STATUS == 0
          AND
          STDOUT =~ /BuddyInit\([0-9]+\)=0/
          AND
          STDOUT =~ /BUDDY_ERRNO=0/
          AND
          STDOUT =~ /status=FREE/          
        }
        
}


Test Test_perf_MULTITHREAD
{
   Product = Buddy library.
   Command = ./test_buddy 2mt
   Comment = at least 10000 malloc/free per sec.

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Failure BadInit
        {
          STDOUT =~ /BuddyInit\([0-9]+\)=[^0]/
        }
        
        
        Failure OutOfMem
        {
          STDOUT =~ /NOT ENOUGH MEMORY/
        }
        
        Failure Very_Low_Performances
        {
          STDOUT =~ /Free in [^0]/
        }

        Failure BuddyErrno_Not_Null
        {
          STDOUT =~ /BUDDY_ERRNO=[^0]/
        }
        
        # Error : non-empty block in the pool of free blocks.
        Failure NonEmptyBlock
        {
         STDOUT =~ /status=RESERV/
        }
        
        Success TestOk
        {
          STATUS == 0
          AND
          STDOUT =~ /BuddyInit\([0-9]+\)=0/
          AND
          STDOUT =~ /BUDDY_ERRNO=0/
          AND
          STDOUT =~ /status=FREE/
          AND
          STDOUT =~ /Free in 0./
        }
        
}




Test Test_Alignment_MULTITHREAD
{
   Product = Buddy library.
   Command = ./test_buddy 3mt
   Comment = Tests memory alignment.

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Failure BadInit
        {
          STDOUT =~ /BuddyInit\([0-9]+\)=[^0]/
        }
                
        Failure Alignment32Error
        {
          STDOUT =~ /32 bits alignment ERROR/
        }

        Failure Alignment64Error
        {
          STDOUT =~ /64 bits alignment ERROR/
        }

        # Error : non-empty block in the pool of free blocks.
        Failure NonEmptyBlock
        {
         STDOUT =~ /status=RESERV/
        }

        
        Success TestOk
        {
          STATUS == 0
          AND
          STDOUT =~ /BuddyInit\([0-9]+\)=0/
          AND
          NOT
          STDOUT =~ /alignment ERROR/
        }
        
}




Test Test_Realloc_MULTITHREAD
{
   Product = Buddy library.
   Command = ./test_buddy 4mt
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Failure BadInit
        {
          STDOUT =~ /BuddyInit\([0-9]+\)=[^0]/
        }
        
        
        Failure OutOfMem
        {
          STDOUT =~ /NOT ENOUGH MEMORY/
        }
        
        Failure IntegrityError
        {
          STDOUT =~ /INTEGRITY ERROR/
        }

        Failure BuddyErrno_Not_Null
        {
          STDOUT =~ /BUDDY_ERRNO=[^0]/
        }
        
        # Error : non-empty block in the pool of free blocks.
        Failure NonEmptyBlock
        {
         STDOUT =~ /status=RESERV/
        }

        # note. At last, at least one free block
        # (resulting from the last reallocated block )
        Success TestOk
        {
          STATUS == 0
          AND
          STDOUT =~ /BuddyInit\([0-9]+\)=0/
          AND
          STDOUT =~ /BUDDY_ERRNO=0/
          AND
          STDOUT =~ /status=FREE/          
        }
        
}



Test Test_Calloc_MULTITHREAD
{
   Product = Buddy library.
   Command = ./test_buddy 5mt
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Failure BadInit
        {
          STDOUT =~ /BuddyInit\([0-9]+\)=[^0]/
        }
        
        
        Failure OutOfMem
        {
          STDOUT =~ /NOT ENOUGH MEMORY/
        }
        
        Failure IntegrityError
        {
          STDOUT =~ /INTEGRITY ERROR/
        }

        Failure MemsetError
        {
          STDOUT =~ /MEMSET ERROR/
        }

        Failure BuddyErrno_Not_Null
        {
          STDOUT =~ /BUDDY_ERRNO=[^0]/
        }
        
        # Error : non-empty block in the pool of free blocks.
        Failure NonEmptyBlock
        {
         STDOUT =~ /status=RESERV/
        }

        
        Success TestOk
        {
          STATUS == 0
          AND
          STDOUT =~ /BuddyInit\([0-9]+\)=0/
          AND
          STDOUT =~ /BUDDY_ERRNO=0/
          AND
          STDOUT =~ /status=FREE/          
          AND
          NOT
          STDOUT =~ /INTEGRITY ERROR/
          AND
          NOT
          STDOUT =~ /MEMSET ERROR/
          
        }
        
}

Test Test_On_Demand_Alloc_MULTITHREAD
{
   Product = Buddy library.
   Command = ./test_buddy 6mt
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }

        Success TestOk
        {
          STATUS == 0
        }

}

Test Test_On_Demand_extra_alloc_MULTITHREAD
{
   Product = Buddy library.
   Command = ./test_buddy 7mt
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Success TestOk
        {
          STATUS == 0
        }
}


Test Test_GC_MULTITHREAD
{
   Product = Buddy library.
   Command = ./test_buddy 8mt
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Success TestOk
        {
          STATUS == 0
        }
        
}

Test Test_Block_Label_MULTITHREAD
{
   Product = Buddy library.
   Command = ./test_buddy 9mt
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Success TestOk
        {
          STATUS == 0
        }
        
}

Test Test_Integrity_MULTITHREAD
{
   Product = Buddy library.
   Command = ./test_buddy Bmt
   Comment = .

        Failure BadStatus
        {
           STATUS != 0
        }
        
        Success TestOk
        {
          STATUS == 0
        }
        
}
