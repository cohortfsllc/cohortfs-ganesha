From 2610d3a136c9e01bf4f1b3819cc79753bdd7045c Mon Sep 17 00:00:00 2001
From: Remi Duraffort <duraffortr@ocre.cea.fr>
Date: Wed, 15 Sep 2010 09:43:51 +0200
Subject: [PATCH] Fix potential buffer overflow.

---
 src/File_Content/cache_content_emergency_flush.c |   14 +++++++++-----
 1 files changed, 9 insertions(+), 5 deletions(-)

diff --git a/src/File_Content/cache_content_emergency_flush.c b/src/File_Content/cache_content_emergency_flush.c
index be55c62..688d97e 100644
--- a/src/File_Content/cache_content_emergency_flush.c
+++ b/src/File_Content/cache_content_emergency_flush.c
@@ -119,7 +119,7 @@ cache_content_status_t cache_content_emergency_flush(char *cachedir,
   cache_content_dirinfo_t directory;
   struct dirent dir_entry;
   FILE *stream = NULL;
-  char buff[CACHE_INODE_DUMP_LEN];
+  char buff[CACHE_INODE_DUMP_LEN + 1];
   int inum;
   char indexpath[MAXPATHLEN];
   char datapath[MAXPATHLEN];
@@ -216,10 +216,14 @@ cache_content_status_t cache_content_emergency_flush(char *cachedir,
           if((stream = fopen(indexpath, "r")) == NULL)
             return CACHE_CONTENT_LOCAL_CACHE_ERROR;
 
-          fscanf(stream, "internal:read_time=%s\n", buff);
-          fscanf(stream, "internal:mod_time=%s\n", buff);
-          fscanf(stream, "internal:export_id=%s\n", buff);
-          fscanf(stream, "file: FSAL handle=%s", buff);
+          #define XSTR(s) STR(s)
+          #define STR(s) #s
+          fscanf(stream, "internal:read_time=%" XSTR(CACHE_INODE_DUMP_LEN) "s\n", buff);
+          fscanf(stream, "internal:mod_time=%" XSTR(CACHE_INODE_DUMP_LEN) "s\n", buff);
+          fscanf(stream, "internal:export_id=%" XSTR(CACHE_INODE_DUMP_LEN) "s\n", buff);
+          fscanf(stream, "file: FSAL handle=%" XSTR(CACHE_INODE_DUMP_LEN) "s", buff);
+          #undef STR
+          #undef XSTR
 
           if(sscanHandle(&fsal_handle, buff) < 0)
             {
-- 
1.7.1

