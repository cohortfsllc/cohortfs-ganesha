From f1b2af20706122f15c5c8a2be65fa1f8c8a05c35 Mon Sep 17 00:00:00 2001
From: Remi Duraffort <duraffortr@ocre.cea.fr>
Date: Tue, 14 Sep 2010 09:27:10 +0200
Subject: [PATCH] CacheInode: fix buffer overflows.

---
 src/Cache_inode/cache_inode_misc.c |   15 ++++++++++-----
 1 files changed, 10 insertions(+), 5 deletions(-)

diff --git a/src/Cache_inode/cache_inode_misc.c b/src/Cache_inode/cache_inode_misc.c
index d17afe0..a9a49ed 100644
--- a/src/Cache_inode/cache_inode_misc.c
+++ b/src/Cache_inode/cache_inode_misc.c
@@ -1319,7 +1319,7 @@ cache_inode_status_t cache_inode_reload_content(char *path, cache_entry_t * pent
 {
   FILE *stream = NULL;
 
-  char buff[CACHE_INODE_DUMP_LEN];
+  char buff[CACHE_INODE_DUMP_LEN + 1];
 
   /* Open the index file */
   if((stream = fopen(path, "r")) == NULL)
@@ -1330,15 +1330,20 @@ cache_inode_status_t cache_inode_reload_content(char *path, cache_entry_t * pent
   pentry->internal_md.valid_state = VALID;
 
   /* Read the information */
-  fscanf(stream, "internal:read_time=%s\n", buff);
+  #define XSTR(s) STR(s)
+  #define STR(s) #s
+  fscanf(stream, "internal:read_time=%" XSTR(CACHE_INODE_DUMP_LEN) "s\n", buff);
   pentry->internal_md.read_time = atoi(buff);
 
-  fscanf(stream, "internal:mod_time=%s\n", buff);
+  fscanf(stream, "internal:mod_time=%" XSTR(CACHE_INODE_DUMP_LEN) "s\n", buff);
   pentry->internal_md.mod_time = atoi(buff);
 
-  fscanf(stream, "internal:export_id=%s\n", buff);
+  fscanf(stream, "internal:export_id=%" XSTR(CACHE_INODE_DUMP_LEN) "s\n", buff);
+
+  fscanf(stream, "file: FSAL handle=%" XSTR(CACHE_INODE_DUMP_LEN) "s", buff);
+  #undef STR
+  #undef XSTR
 
-  fscanf(stream, "file: FSAL handle=%s", buff);
   if(sscanHandle(&(pentry->object.file.handle), buff) < 0)
     {
       /* expected = 2*sizeof(fsal_handle_t) in hexa representation */
-- 
